from flask import Flask, request, jsonify
import os
import requests
import random
from datetime import datetime, timedelta
import time
import threading

app = Flask(__name__)

# Environment variables
BOT_TOKEN = os.environ.get('BOT_TOKEN')
CRICAPI_KEY = os.environ.get('CRICAPI_KEY')
VERCEL_URL = os.environ.get('VERCEL_URL', 'sports-prediction-bot.vercel.app')
ADMIN_CHAT_ID = os.environ.get('ADMIN_CHAT_ID')

# Storage
users_storage = {}
player_registrations = {}
player_deposits = {}

# ==================== COMPLETE 5 LANGUAGES ====================
LANGUAGE_MESSAGES = {
    'en': {
        'welcome': "ЁЯМН *Select Your Preferred Language:*",
        'selected': "тЬЕ You selected English!",
        'register_title': "ЁЯМР *Step 1 - Register*",
        'account_new': "тА╝я╕П *THE ACCOUNT MUST BE NEW*",
        'instruction1': "1я╕ПтГг If after clicking the \"REGISTER\" button you get to the old account, you need to log out of it and click the button again.",
        'instruction2': "2я╕ПтГг Specify a promocode during registration: **CLAIM**",
        'after_reg': "тЬЕ After REGISTRATION, click the \"CHECK REGISTRATION\" button",
        'register_btn': "ЁЯУ▓ REGISTER NOW",
        'check_btn': "ЁЯФН CHECK REGISTRATION",
        'enter_player_id': "ЁЯФН *Check Your Registration*\n\nPlease enter your 1Win *Player ID* to verify:\n\nЁЯУЭ *How to find Player ID:*\n1. Login to 1Win account\n2. Go to Profile Settings\n3. Copy Player ID number\n4. Paste it here\n\nЁЯФв *Enter your Player ID now:*",
        'loading_registration': "тП│ *Please wait few seconds, your registration is loading...*",
        'reg_success': "ЁЯОЙ *Great, you have successfully completed registration!*\n\nтЬЕ Your account is synchronized with the bot\n\nЁЯТ┤ *To gain access to signals, deposit your account (make a deposit) with at least 600тВ╣ or $6 in any currency*\n\nЁЯХ╣я╕П After successfully replenishing your account, click on the CHECK DEPOSIT button and gain access",
        'reg_not_found': "тЭМ *Sorry, You're Not Registered!*\n\nPlease click the REGISTER button first and complete your registration using our affiliate link.\n\nAfter successful registration, come back and enter your Player ID.",
        'deposit_btn': "ЁЯТ│ DEPOSIT NOW",
        'check_deposit_btn': "ЁЯФН CHECK DEPOSIT",
        'deposit_success': "ЁЯОК *Deposit Verified Successfully!*\n\nЁЯТ░ *Deposit Amount:* ${amount}\nтЬЕ *Status:* Verified\n\nЁЯОп You now have access to AI-powered predictions!\n\nЁЯТ░ *Validity:* 5 days (20 predictions daily)\n\nClick below to get your first prediction:",
        'deposit_not_found': "ЁЯТ░ *Deposit Not Found!*\n\nYou have registered successfully but no deposit detected yet.\n\nЁЯТ╡ Please make a deposit of at least $6 to get prediction access.",
        'get_prediction_btn': "ЁЯОп GET PREDICTION",
        'prediction_limit': "ЁЯЪл *Prediction Limit Reached*\n\nYou've used all 20 free predictions for today.\n\nЁЯТб *Options:*\nтАв Wait until tomorrow for new predictions\nтАв Deposit 400тВ╣ or $4 for immediate access\n\nЁЯТ░ Continue predictions by depositing at least 400тВ╣ or $4",
        'deposit_expired': "тП░ *Deposit Validity Expired!*\n\nYour 5-day prediction access has ended.\n\nЁЯТО *What's Next:*\nтАв Make a new deposit to continue predictions\nтАв Get 20 predictions daily for 5 days\n\nЁЯТ░ Deposit now to restart your prediction access!",
        'deposit_again_btn': "ЁЯТ│ DEPOSIT AGAIN",
        'try_tomorrow_btn': "ЁЯХР TRY TOMORROW",
        'next_prediction_btn': "ЁЯФД NEXT PREDICTION",
        'prediction_text': "ЁЯОп *AI CRICKET PREDICTION* ЁЯдЦ\n\nЁЯПЯя╕П *Match:* {team_a} vs {team_b}\nЁЯУК *Prediction:* {prediction}\nтЬЕ *Confidence:* {confidence}%\n\nЁЯУИ *Analysis:*\n{analysis}\n\nтЪая╕П *AI Prediction - Bet Responsibly*"
    },
    'hi': {
        'welcome': "ЁЯМН *рдЕрдкрдиреА рдкрд╕рдВрджреАрджрд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:*",
        'selected': "тЬЕ рдЖрдкрдиреЗ рд╣рд┐рдВрджреА рдЪреБрдиреА!",
        'register_title': "ЁЯМР *рдЪрд░рдг 1 - рдкрдВрдЬреАрдХрд░рдг*",
        'account_new': "тА╝я╕П *рдЦрд╛рддрд╛ рдирдпрд╛ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП*",
        'instruction1': "1я╕ПтГг рдпрджрд┐ \"REGISTER\" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж рдЖрдк рдкреБрд░рд╛рдиреЗ рдЦрд╛рддреЗ рдореЗрдВ рдЖрддреЗ рд╣реИрдВ, рддреЛ рдЖрдкрдХреЛ рдЙрд╕рд╕реЗ рд▓реЙрдЧ рдЖрдЙрдЯ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ рдФрд░ рдлрд┐рд░ рд╕реЗ рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ред",
        'instruction2': "2я╕ПтГг рдкрдВрдЬреАрдХрд░рдг рдХреЗ рджреМрд░рд╛рди рдкреНрд░реЛрдореЛрдХреЛрдб рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдХрд░реЗрдВ: **CLAIM**",
        'after_reg': "тЬЕ рдкрдВрдЬреАрдХрд░рдг рдХреЗ рдмрд╛рдж, \"CHECK REGISTRATION\" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ",
        'register_btn': "ЁЯУ▓ рдкрдВрдЬреАрдХрд░рдг рдХрд░реЗрдВ",
        'check_btn': "ЁЯФН рдкрдВрдЬреАрдХрд░рдг рдЬрд╛рдВрдЪреЗрдВ",
        'enter_player_id': "ЁЯФН *рдЕрдкрдирд╛ рдкрдВрдЬреАрдХрд░рдг рдЬрд╛рдВрдЪреЗрдВ*\n\nрдХреГрдкрдпрд╛ рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЕрдкрдирд╛ 1Win *Player ID* рджрд░реНрдЬ рдХрд░реЗрдВ:\n\nЁЯУЭ *Player ID рдХреИрд╕реЗ рдвреВрдВрдвреЗрдВ:*\n1. 1Win рдЕрдХрд╛рдЙрдВрдЯ рдореЗрдВ рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ\n2. рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕реЗрдЯрд┐рдВрдЧреНрд╕ рдкрд░ рдЬрд╛рдПрдВ\n3. Player ID рдирдореНрдмрд░ рдХреЙрдкреА рдХрд░реЗрдВ\n4. рдпрд╣рд╛рдБ рдкреЗрд╕реНрдЯ рдХрд░реЗрдВ\n\nЁЯФв *рдЕрдм рдЕрдкрдирд╛ Player ID рджрд░реНрдЬ рдХрд░реЗрдВ:*",
        'loading_registration': "тП│ *рдХреГрдкрдпрд╛ рдХреБрдЫ рд╕реЗрдХрдВрдб рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВ, рдЖрдкрдХрд╛ рдкрдВрдЬреАрдХрд░рдг рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...*",
        'reg_success': "ЁЯОЙ *рдмрдзрд╛рдИ рд╣реЛ, рдЖрдкрдиреЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкрдВрдЬреАрдХрд░рдг рдкреВрд░рд╛ рдХрд░ рд▓рд┐рдпрд╛ рд╣реИ!*\n\nтЬЕ рдЖрдкрдХрд╛ рдЦрд╛рддрд╛ рдмреЙрдЯ рдХреЗ рд╕рд╛рде рд╕рд┐рдВрдХ рд╣реЛ рдЧрдпрд╛ рд╣реИ\n\nЁЯТ┤ *рд╕рд┐рдЧреНрдирд▓ рддрдХ рдкрд╣реБрдВрдЪ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЕрдкрдиреЗ рдЦрд╛рддреЗ рдореЗрдВ рдХрдо рд╕реЗ рдХрдо 600тВ╣ рдпрд╛ $6 рдЬрдорд╛ рдХрд░реЗрдВ*\n\nЁЯХ╣я╕П рдЕрдкрдирд╛ рдЦрд╛рддрд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд░рд┐рдЪрд╛рд░реНрдЬ рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж, CHECK DEPOSIT рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рдФрд░ рдкрд╣реБрдВрдЪ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
        'reg_not_found': "тЭМ *рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдЖрдк рдкрдВрдЬреАрдХреГрдд рдирд╣реАрдВ рд╣реИрдВ!*\n\nрдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ REGISTER рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рдФрд░ рд╣рдорд╛рд░реЗ рдПрдлрд┐рд▓рд┐рдПрдЯ рд▓рд┐рдВрдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЕрдкрдирд╛ рдкрдВрдЬреАрдХрд░рдг рдкреВрд░рд╛ рдХрд░реЗрдВред\n\nрд╕рдлрд▓ рдкрдВрдЬреАрдХрд░рдг рдХреЗ рдмрд╛рдж, рд╡рд╛рдкрд╕ рдЖрдПрдВ рдФрд░ рдЕрдкрдирд╛ Player ID рджрд░реНрдЬ рдХрд░реЗрдВред",
        'deposit_btn': "ЁЯТ│ рдЬрдорд╛ рдХрд░реЗрдВ",
        'check_deposit_btn': "ЁЯФН рдЬрдорд╛ рдЬрд╛рдВрдЪреЗрдВ",
        'deposit_success': "ЁЯОК *рдЬрдорд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рддреНрдпрд╛рдкрд┐рдд!*\n\nЁЯТ░ *рдЬрдорд╛ рд░рд╛рд╢рд┐:* ${amount}\nтЬЕ *рд╕реНрдерд┐рддрд┐:* рд╕рддреНрдпрд╛рдкрд┐рдд\n\nЁЯОп рдЕрдм рдЖрдкрдХреЗ рдкрд╛рд╕ AI-рдкрд╛рд╡рд░реНрдб рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпреЛрдВ рддрдХ рдкрд╣реБрдВрдЪ рд╣реИ!\n\nЁЯТ░ *рд╡реИрдзрддрд╛:* 5 рджрд┐рди (рд░реЛрдЬ 20 рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпрд╛рдБ)\n\nрдЕрдкрдиреА рдкрд╣рд▓реА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдиреАрдЪреЗ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ:",
        'deposit_not_found': "ЁЯТ░ *рдЬрдорд╛ рдирд╣реАрдВ рдорд┐рд▓рд╛!*\n\nрдЖрдкрдиреЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкрдВрдЬреАрдХрд░рдг рдХрд░ рд▓рд┐рдпрд╛ рд╣реИ рд▓рдХрд┐рди рдЕрднреА рддрдХ рдХреЛрдИ рдЬрдорд╛ рдирд╣реАрдВ detected рд╣реБрдЖ рд╣реИред\n\nЁЯТ╡ рдХреГрдкрдпрд╛ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рддрдХ рдкрд╣реБрдВрдЪ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХрдо рд╕реЗ рдХрдо $6 рдЬрдорд╛ рдХрд░реЗрдВред",
        'get_prediction_btn': "ЁЯОп рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
        'prediction_limit': "ЁЯЪл *рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рд╕реАрдорд╛ рдкреВрд░реНрдг*\n\nрдЖрдкрдиреЗ рдЖрдЬ рдХреА рд╕рднреА 20 рдореБрдлреНрдд рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпреЛрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд▓рд┐рдпрд╛ рд╣реИред\n\nЁЯТб *рд╡рд┐рдХрд▓реНрдк:*\nтАв рдирдИ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдХрд▓ рддрдХ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВ\nтАв рддреБрд░рдВрдд рдкрд╣реБрдВрдЪ рдХреЗ рд▓рд┐рдП 400тВ╣ рдпрд╛ $4 рдЬрдорд╛ рдХрд░реЗрдВ\n\nЁЯТ░ рдХрдо рд╕реЗ рдХрдо 400тВ╣ рдпрд╛ $4 рдЬрдорд╛ рдХрд░рдХреЗ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпрд╛рдБ рдЬрд╛рд░реА рд░рдЦреЗрдВ",
        'deposit_expired': "тП░ *рдЬрдорд╛ рд╡реИрдзрддрд╛ рд╕рдорд╛рдкреНрдд!*\n\nрдЖрдкрдХреА 5-рджрд┐рди рдХреА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкрд╣реБрдВрдЪ рд╕рдорд╛рдкреНрдд рд╣реЛ рдЧрдИ рд╣реИред\n\nЁЯТО *рдЖрдЧреЗ рдХреНрдпрд╛:*\nтАв рдирдпрд╛ рдЬрдорд╛ рдХрд░рдХреЗ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпрд╛рдБ рдЬрд╛рд░реА рд░рдЦреЗрдВ\nтАв 5 рджрд┐рдиреЛрдВ рдХреЗ рд▓рд┐рдП рд░реЛрдЬ 20 рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпрд╛рдБ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ\n\nЁЯТ░ рдЕрдм рдЬрдорд╛ рдХрд░рдХреЗ рдЕрдкрдиреА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкрд╣реБрдВрдЪ рдкреБрдирдГ рдкреНрд░рд╛рд░рдВрдн рдХрд░реЗрдВ!",
        'deposit_again_btn': "ЁЯТ│ рдлрд┐рд░ рд╕реЗ рдЬрдорд╛ рдХрд░реЗрдВ",
        'try_tomorrow_btn': "ЁЯХР рдХрд▓ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ",
        'next_prediction_btn': "ЁЯФД рдЕрдЧрд▓реА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА",
        'prediction_text': "ЁЯОп *AI рдХреНрд░рд┐рдХреЗрдЯ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА* ЁЯдЦ\n\nЁЯПЯя╕П *рдореИрдЪ:* {team_a} vs {team_b}\nЁЯУК *рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА:* {prediction}\nтЬЕ *рд╡рд┐рд╢реНрд╡рд╛рд╕:* {confidence}%\n\nЁЯУИ *рд╡рд┐рд╢реНрд▓реЗрд╖рдг:*\n{analysis}\n\nтЪая╕П *AI рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА - рдЬрд┐рдореНрдореЗрджрд╛рд░реА рд╕реЗ рдЬреБрдЖ рдЦреЗрд▓реЗрдВ*"
    },
    'bn': {
        'welcome': "ЁЯМН *ржЖржкржирж╛рж░ ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:*",
        'selected': "тЬЕ ржЖржкржирж┐ ржмрж╛ржВрж▓рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЗржЫрзЗржи!",
        'register_title': "ЁЯМР *ржзрж╛ржк 1 - ржирж┐ржмржирзНржзржи*",
        'account_new': "тА╝я╕П *ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯржЯрж┐ ржирждрзБржи рж╣рждрзЗ рж╣ржмрзЗ*",
        'instruction1': "1я╕ПтГг ржпржжрж┐ \"REGISTER\" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж╛рж░ ржкрж░рзЗ ржЖржкржирж┐ ржкрзБрж░рж╛ржирзЛ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ ржЖрж╕рзЗржи, рждрж╛рж╣рж▓рзЗ ржЖржкржирж╛ржХрзЗ ржПржЯрж┐ ржерзЗржХрзЗ рж▓ржЧ ржЖржЙржЯ ржХрж░рждрзЗ рж╣ржмрзЗ ржПржмржВ ржЖржмрж╛рж░ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рждрзЗ рж╣ржмрзЗред",
        'instruction2': "2я╕ПтГг ржирж┐ржмржирзНржзржирзЗрж░ рж╕ржоржпрж╝ ржПржХржЯрж┐ ржкрзНрж░рзЛржорзЛржХрзЛржб ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХрж░рзБржи: **CLAIM**",
        'after_reg': "тЬЕ ржирж┐ржмржирзНржзржирзЗрж░ ржкрж░рзЗ, \"CHECK REGISTRATION\" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
        'register_btn': "ЁЯУ▓ ржирж┐ржмржирзНржзржи ржХрж░рзБржи",
        'check_btn': "ЁЯФН ржирж┐ржмржирзНржзржи ржкрж░рзАржХрзНрж╖рж╛",
        'enter_player_id': "ЁЯФН *ржЖржкржирж╛рж░ ржирж┐ржмржирзНржзржи ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржи*\n\nржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржкржирж╛рж░ 1Win *Player ID* рж▓рж┐ржЦрзБржи:\n\nЁЯУЭ *Player ID ржХрж┐ржнрж╛ржмрзЗ ржЦрзБржБржЬрзЗ ржкрж╛ржмрзЗржи:*\n1. 1Win ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ рж▓ржЧржЗржи ржХрж░рзБржи\n2. ржкрзНрж░рзЛржлрж╛ржЗрж▓ рж╕рзЗржЯрж┐ржВрж╕рзЗ ржпрж╛ржи\n3. Player ID ржиржорзНржмрж░ ржХржкрж┐ ржХрж░рзБржи\n4. ржПржЦрж╛ржирзЗ ржкрзЗрж╕рзНржЯ ржХрж░рзБржи\n\nЁЯФв *ржПржЦржи ржЖржкржирж╛рж░ Player ID рж▓рж┐ржЦрзБржи:*",
        'loading_registration': "тП│ *ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржХржпрж╝рзЗржХ рж╕рзЗржХрзЗржирзНржб ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи, ржЖржкржирж╛рж░ ржирж┐ржмржирзНржзржи рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...*",
        'reg_success': "ЁЯОЙ *ржЕржнрж┐ржиржирзНржжржи, ржЖржкржирж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржирж┐ржмржирзНржзржи рж╕ржорзНржкржирзНржи ржХрж░рзЗржЫрзЗржи!*\n\nтЬЕ ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржмржЯрзЗрж░ рж╕рж╛ржерзЗ рж╕рж┐ржЩрзНржХ рж╣ржпрж╝рзЗржЫрзЗ\n\nЁЯТ┤ *рж╕рж┐ржЧржирзНржпрж╛рж▓ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрзЗрждрзЗ, ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ ржХржоржкржХрзНрж╖рзЗ 600тВ╣ ржмрж╛ $6 ржЬржорж╛ ржХрж░рзБржи*\n\nЁЯХ╣я╕П ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ рж░рж┐ржЪрж╛рж░рзНржЬ ржХрж░рж╛рж░ ржкрж░, CHECK DEPOSIT ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи ржПржмржВ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрж╛ржи",
        'reg_not_found': "тЭМ *ржжрзБржГржЦрж┐ржд, ржЖржкржирж┐ ржирж┐ржмржирзНржзрж┐ржд ржиржи!*\n\nржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржкрзНрж░ржержорзЗ REGISTER ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи ржПржмржВ ржЖржорж╛ржжрзЗрж░ ржЕрзНржпрж╛ржлрж┐рж▓рж┐ржпрж╝рзЗржЯ рж▓рж┐ржЩрзНржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржкржирж╛рж░ ржирж┐ржмржирзНржзржи рж╕ржорзНржкрзВрж░рзНржг ржХрж░рзБржиред\n\nрж╕ржлрж▓ ржирж┐ржмржирзНржзржирзЗрж░ ржкрж░рзЗ, ржлрж┐рж░рзЗ ржЖрж╕рзБржи ржПржмржВ ржЖржкржирж╛рж░ Player ID рж▓рж┐ржЦрзБржиред",
        'deposit_btn': "ЁЯТ│ ржЬржорж╛ ржХрж░рзБржи",
        'check_deposit_btn': "ЁЯФН ржЬржорж╛ ржкрж░рзАржХрзНрж╖рж╛",
        'deposit_success': "ЁЯОК *ржЬржорж╛ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!*\n\nЁЯТ░ *ржЬржорж╛рж░ ржкрж░рж┐ржорж╛ржг:* ${amount}\nтЬЕ *рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕:* ржпрж╛ржЪрж╛ржЗржХрзГржд\n\nЁЯОп ржПржЦржи ржЖржкржирж╛рж░ AI-ржЪрж╛рж▓рж┐ржд ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржЖржЫрзЗ!\n\nЁЯТ░ *ржмрзИржзрждрж╛:* 5 ржжрж┐ржи (ржжрзИржирж┐ржХ 20 ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА)\n\nржЖржкржирж╛рж░ ржкрзНрж░ржержо ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржкрзЗрждрзЗ ржирзАржЪрзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи:",
        'deposit_not_found': "ЁЯТ░ *ржЬржорж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐!*\n\nржЖржкржирж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржирж┐ржмржирзНржзржи ржХрж░рзЗржЫрзЗржи ржХрж┐ржирзНрждрзБ ржПржЦржиржУ ржХрзЛржи ржЬржорж╛ рж╕ржирж╛ржХрзНржд ржХрж░рж╛ ржпрж╛ржпрж╝ржирж┐ред\n\nЁЯТ╡ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрзЗрждрзЗ ржХржоржкржХрзНрж╖рзЗ $6 ржЬржорж╛ ржХрж░рзБржиред",
        'get_prediction_btn': "ЁЯОп ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржкрж╛ржи",
        'prediction_limit': "ЁЯЪл *ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА рж╕рзАржорж╛ reached*\n\nржЖржкржирж┐ ржЖржЬржХрзЗрж░ 20ржЯрж┐ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗрж░ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗржЫрзЗржиред\n\nЁЯТб *ржмрж┐ржХрж▓рзНржк:*\nтАв ржирждрзБржи ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзАрж░ ржЬржирзНржп ржЖржЧрж╛ржорзАржХрж╛рж▓ ржкрж░рзНржпржирзНржд ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи\nтАв рждрж╛рждрзНржХрзНрж╖ржгрж┐ржХ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕рзЗрж░ ржЬржирзНржп 400тВ╣ ржмрж╛ $4 ржЬржорж╛ ржХрж░рзБржи\n\nЁЯТ░ ржХржоржкржХрзНрж╖рзЗ 400тВ╣ ржмрж╛ $4 ржЬржорж╛ ржХрж░рзЗ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи",
        'deposit_expired': "тП░ *ржЬржорж╛ ржмрзИржзрждрж╛ рж╢рзЗрж╖!*\n\nржЖржкржирж╛рж░ 5-ржжрж┐ржирзЗрж░ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ рж╢рзЗрж╖ рж╣ржпрж╝рзЗржЫрзЗред\n\nЁЯТО *ржкрж░ржмрж░рзНрждрзА ржХрзА:*\nтАв ржирждрзБржи ржЬржорж╛ ржХрж░рзЗ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи\nтАв 5 ржжрж┐ржирзЗрж░ ржЬржирзНржп ржжрзИржирж┐ржХ 20 ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржкрж╛ржи\n\nЁЯТ░ ржПржЦржи ржЬржорж╛ ржХрж░рзЗ ржЖржкржирж╛рж░ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрзБржирж░рж╛ржпрж╝ рж╢рзБрж░рзБ ржХрж░рзБржи!",
        'deposit_again_btn': "ЁЯТ│ ржЖржмрж╛рж░ ржЬржорж╛ ржХрж░рзБржи",
        'try_tomorrow_btn': "ЁЯХР ржЖржЧрж╛ржорзАржХрж╛рж▓ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи",
        'next_prediction_btn': "ЁЯФД ржкрж░ржмрж░рзНрждрзА ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА",
        'prediction_text': "ЁЯОп *AI ржХрзНрж░рж┐ржХрзЗржЯ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА* ЁЯдЦ\n\nЁЯПЯя╕П *ржорзНржпрж╛ржЪ:* {team_a} vs {team_b}\nЁЯУК *ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА:* {prediction}\nтЬЕ *ржЖрждрзНржоржмрж┐рж╢рзНржмрж╛рж╕:* {confidence}%\n\nЁЯУИ *ржмрж┐рж╢рзНрж▓рзЗрж╖ржг:*\n{analysis}\n\nтЪая╕П *AI ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА - ржжрж╛ржпрж╝рж┐рждрзНржм рж╕рж╣ржХрж╛рж░рзЗ ржмрзЗржЯ ржХрж░рзБржи*"
    },
    'ur': {
        'welcome': "ЁЯМН *╪з┘╛┘Ж█М ╪▓╪и╪з┘Ж ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║:*",
        'selected': "тЬЕ ╪в┘╛ ┘Ж█Т ╪з╪▒╪п┘И ┘Е┘Ж╪к╪о╪и ┌й█М!",
        'register_title': "ЁЯМР *┘Е╪▒╪н┘Д█Б 1 - ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж*",
        'account_new': "тА╝я╕П *╪з┌й╪з╪д┘Ж┘╣ ┘Ж█М╪з █Б┘И┘Ж╪з ┌Ж╪з█Б█М█Т*",
        'instruction1': "1я╕ПтГг ╪з┌п╪▒ \"REGISTER\" ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒┘Ж█Т ┌й█Т ╪и╪╣╪п ╪в┘╛ ┘╛╪▒╪з┘Ж█Т ╪з┌й╪з╪д┘Ж┘╣ ┘Е█М┌║ ╪в╪к█Т █Б█М┌║╪М ╪к┘И ╪в┘╛ ┌й┘И ╪з╪│ ╪│█Т ┘Д╪з┌п ╪в╪д┘╣ █Б┘И┘Ж╪з ┘╛┌С█Т ┌п╪з ╪з┘И╪▒ ╪п┘И╪и╪з╪▒█Б ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒┘Ж╪з █Б┘И┌п╪з█Ф",
        'instruction2': "2я╕ПтГг ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й█Т ╪п┘И╪▒╪з┘Ж ╪з█М┌й ┘╛╪▒┘И┘Е┘И┌й┘И┌И specified ┌й╪▒█М┌║: **CLAIM**",
        'after_reg': "тЬЕ ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й█Т ╪и╪╣╪п╪М \"CHECK REGISTRATION\" ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒█М┌║",
        'register_btn': "ЁЯУ▓ ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й╪▒█М┌║",
        'check_btn': "ЁЯФН ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌Ж█М┌й",
        'enter_player_id': "ЁЯФН *╪з┘╛┘Ж█М ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌Ж█М┌й ┌й╪▒█М┌║*\n\n╪к╪╡╪п█М┘В ┌й█Т ┘Д█М█Т ╪з┘╛┘Ж╪з 1Win *Player ID* ╪п╪▒╪м ┌й╪▒█М┌║:\n\nЁЯУЭ *Player ID ┌й█М╪│█Т ┌И┌╛┘И┘Ж┌И█М┌║:*\n1. 1Win ╪з┌й╪з╪д┘Ж┘╣ ┘Е█М┌║ ┘Д╪з┌п ╪з┘Ж ┌й╪▒█М┌║\n2. ┘╛╪▒┘И┘Б╪з╪ж┘Д ╪│█М┘╣┘Ж┌п╪▓ ┘╛╪▒ ╪м╪з╪ж█М┌║\n3. Player ID ┘Ж┘Е╪и╪▒ ┌й╪з┘╛█М ┌й╪▒█М┌║\n4. █М█Б╪з┌║ ┘╛█М╪│┘╣ ┌й╪▒█М┌║\n\nЁЯФв *╪з╪и ╪з┘╛┘Ж╪з Player ID ╪п╪▒╪м ┌й╪▒█М┌║:*",
        'loading_registration': "тП│ *╪и╪▒╪з█Б ┌й╪▒┘Е ┌й┌Ж┌╛ ╪│█М┌й┘Ж┌И ╪з┘Ж╪к╪╕╪з╪▒ ┌й╪▒█М┌║╪М ╪в┘╛ ┌й█М ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┘Д┘И┌И █Б┘И ╪▒█Б█М █Б█Т...*",
        'reg_success': "ЁЯОЙ *┘Е╪и╪з╪▒┌й █Б┘И╪М ╪в┘╛ ┘Ж█Т ┌й╪з┘Е█М╪з╪и█М ┌й█Т ╪│╪з╪к┌╛ ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┘Е┌й┘Е┘Д ┌й╪▒ ┘Д█М █Б█Т!*\n\nтЬЕ ╪в┘╛ ┌й╪з ╪з┌й╪з╪д┘Ж┘╣ ╪и┘И┘╣ ┌й█Т ╪│╪з╪к┌╛ sync █Б┘И ┌п█М╪з █Б█Т\n\nЁЯТ┤ *╪│┌п┘Ж┘Д╪▓ ╪к┌й ╪▒╪│╪з╪ж█М ╪н╪з╪╡┘Д ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т╪М ╪з┘╛┘Ж█Т ╪з┌й╪з╪д┘Ж┘╣ ┘Е█М┌║ ┌й┘Е ╪з╪▓ ┌й┘Е 600тВ╣ █М╪з $6 ╪м┘Е╪╣ ┌й╪▒┘И╪з╪ж█М┌║*\n\nЁЯХ╣я╕П ╪з┘╛┘Ж╪з ╪з┌й╪з╪д┘Ж┘╣ ┌й╪з┘Е█М╪з╪и█М ╪│█Т ╪▒█М┌Ж╪з╪▒╪м ┌й╪▒┘Ж█Т ┌й█Т ╪и╪╣╪п╪М CHECK DEPOSIT ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒█М┌║ ╪з┘И╪▒ ╪▒╪│╪з╪ж█М ╪н╪з╪╡┘Д ┌й╪▒█М┌║",
        'reg_not_found': "тЭМ *┘Е╪╣╪░╪▒╪к╪М ╪в┘╛ ╪▒╪м╪│┘╣╪▒┌И ┘Ж█Б█М┌║ █Б█М┌║!*\n\n╪и╪▒╪з█Б ┌й╪▒┘Е ┘╛█Б┘Д█Т REGISTER ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒█М┌║ ╪з┘И╪▒ █Б┘Е╪з╪▒█Т affiliate link ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒╪к█Т █Б┘И╪ж█Т ╪з┘╛┘Ж█М ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┘Е┌й┘Е┘Д ┌й╪▒█М┌║█Ф\n\n┌й╪з┘Е█М╪з╪и ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й█Т ╪и╪╣╪п╪М ┘И╪з┘╛╪│ ╪в╪ж█М┌║ ╪з┘И╪▒ ╪з┘╛┘Ж╪з Player ID ╪п╪▒╪м ┌й╪▒█М┌║█Ф",
        'deposit_btn': "ЁЯТ│ ╪м┘Е╪╣ ┌й╪▒┘И╪з╪ж█М┌║",
        'check_deposit_btn': "ЁЯФН ╪м┘Е╪╣ ┌Ж█М┌й",
        'deposit_success': "ЁЯОК *╪м┘Е╪╣ ┌й╪з┘Е█М╪з╪и█М ╪│█Т ╪к╪╡╪п█М┘В █Б┘И ┌п╪ж█М!*\n\nЁЯТ░ *╪м┘Е╪╣ ┌й█М ╪▒┘В┘Е:* ${amount}\nтЬЕ *╪н╪з┘Д╪к:* ╪к╪╡╪п█М┘В ╪┤╪п█Б\n\nЁЯОп ╪з╪и ╪в┘╛ ┌й█Т ┘╛╪з╪│ AI-powered predictions ╪к┌й ╪▒╪│╪з╪ж█М █Б█Т!\n\nЁЯТ░ *╪м┘И╪з╪▓:* 5 ╪п┘Ж (╪▒┘И╪▓╪з┘Ж█Б 20 predictions)\n\n╪з┘╛┘Ж█М ┘╛█Б┘Д█М prediction ╪н╪з╪╡┘Д ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т ┘Ж█М┌Ж█Т ┌й┘Д┌й ┌й╪▒█М┌║:",
        'deposit_not_found': "ЁЯТ░ *╪м┘Е╪╣ ┘Ж█Б█М┌║ ┘Е┘Д█М!*\n\n╪в┘╛ ┘Ж█Т ┌й╪з┘Е█М╪з╪и█М ┌й█Т ╪│╪з╪к┌╛ ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й╪▒ ┘Д█М █Б█Т ┘Д█М┌й┘Ж ╪з╪и┌╛█М ╪к┌й ┌й┘И╪ж█М ╪м┘Е╪╣ ┌й╪з ┘╛╪к█Б ┘Ж█Б█М┌║ ┌Ж┘Д╪з █Б█Т█Ф\n\nЁЯТ╡ prediction ╪к┌й ╪▒╪│╪з╪ж█М ╪н╪з╪╡┘Д ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т ┌й┘Е ╪з╪▓ ┌й┘Е $6 ╪м┘Е╪╣ ┌й╪▒┘И╪з╪ж█М┌║█Ф",
        'get_prediction_btn': "ЁЯОп prediction ╪н╪з╪╡┘Д",
        'prediction_limit': "ЁЯЪл *prediction ╪н╪п reached*\n\n╪в┘╛ ┘Ж█Т ╪в╪м ┌й█М 20 ┘Е┘Б╪к predictions ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒ ┘Д█М █Б█М┌║█Ф\n\nЁЯТб *╪з╪о╪к█М╪з╪▒╪з╪к:*\nтАв ┘Ж╪ж█М predictions ┌й█Т ┘Д█М█Т ┌й┘Д ╪к┌й ╪з┘Ж╪к╪╕╪з╪▒ ┌й╪▒█М┌║\nтАв ┘Б┘И╪▒█М ╪▒╪│╪з╪ж█М ┌й█Т ┘Д█М█Т 400тВ╣ █М╪з $4 ╪м┘Е╪╣ ┌й╪▒┘И╪з╪ж█М┌║\n\nЁЯТ░ ┌й┘Е ╪з╪▓ ┌й┘Е 400тВ╣ █М╪з $4 ╪м┘Е╪╣ ┌й╪▒┘И╪з ┌й╪▒ predictions ╪м╪з╪▒█М ╪▒┌й┌╛█М┌║",
        'deposit_expired': "тП░ *╪м┘Е╪╣ ┌й█М ┘Е█М╪╣╪з╪п ╪о╪к┘Е!*\n\n╪в┘╛ ┌й█М 5-╪п┘Ж ┌й█М prediction ╪▒╪│╪з╪ж█М ╪о╪к┘Е █Б┘И ┌п╪ж█М █Б█Т█Ф\n\nЁЯТО *╪в┌п█Т ┌й█М╪з:*\nтАв ┘Ж█М╪з ╪м┘Е╪╣ ┌й╪▒┘И╪з ┌й╪▒ predictions ╪м╪з╪▒█М ╪▒┌й┌╛█М┌║\nтАв 5 ╪п┘Ж┘И┌║ ┌й█Т ┘Д█М█Т ╪▒┘И╪▓╪з┘Ж█Б 20 predictions ╪н╪з╪╡┘Д ┌й╪▒█М┌║\n\nЁЯТ░ ╪з╪и ╪м┘Е╪╣ ┌й╪▒┘И╪з ┌й╪▒ ╪з┘╛┘Ж█М prediction ╪▒╪│╪з╪ж█М ╪п┘И╪и╪з╪▒█Б ╪┤╪▒┘И╪╣ ┌й╪▒█М┌║!",
        'deposit_again_btn': "ЁЯТ│ ╪п┘И╪и╪з╪▒█Б ╪м┘Е╪╣",
        'try_tomorrow_btn': "ЁЯХР ┌й┘Д ┌й┘И╪┤╪┤",
        'next_prediction_btn': "ЁЯФД ╪з┌п┘Д█М prediction",
        'prediction_text': "ЁЯОп *AI ┌й╪▒┌й┘╣ prediction* ЁЯдЦ\n\nЁЯПЯя╕П *┘Е┘В╪з╪и┘Д█Б:* {team_a} vs {team_b}\nЁЯУК *prediction:* {prediction}\nтЬЕ *╪з╪╣╪к┘Е╪з╪п:* {confidence}%\n\nЁЯУИ *╪к╪м╪▓█М█Б:*\n{analysis}\n\nтЪая╕П *AI prediction - ╪░┘Е█Б ╪п╪з╪▒█М ╪│█Т ╪м┘И╪з ┌й┌╛█М┘Д█М┌║*"
    },
    'ne': {
        'welcome': "ЁЯМН *рдЖрдлреНрдиреЛ рднрд╛рд╖рд╛ рдЪрдпрди рдЧрд░реНрдиреБрд╣реЛрд╕реН:*",
        'selected': "тЬЕ рддрдкрд╛рдИрдВрд▓реЗ рдиреЗрдкрд╛рд▓реА рдЪрдпрди рдЧрд░реНрдиреБрднрдпреЛ!",
        'register_title': "ЁЯМР *рдЪрд░рдг 1 - рджрд░реНрддрд╛*",
        'account_new': "тА╝я╕П *рдЦрд╛рддрд╛ рдирдпрд╛рдБ рд╣реБрдиреБрдкрд░реНрдЫ*",
        'instruction1': "1я╕ПтГг рдпрджрд┐ \"REGISTER\" рдмрдЯрдирдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реЗрдкрдЫрд┐ рддрдкрд╛рдИрдВ рдкреБрд░рд╛рдиреЛ рдЦрд╛рддрд╛рдорд╛ рдЖрдЙрдиреБрд╣реБрдиреНрдЫ рднрдиреЗ, рддрдкрд╛рдИрдВрд▓реЗ рдпрд╕рдмрд╛рдЯ рд▓рдЧ рдЖрдЙрдЯ рдЧрд░реНрдиреБрдкрд░реНрдЫ рд░ рдлреЗрд░рд┐ рдмрдЯрдирдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрдкрд░реНрдЫред",
        'instruction2': "2я╕ПтГг рджрд░реНрддрд╛ during рдкреНрд░реЛрдореЛрдХреЛрдб рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН: **CLAIM**",
        'after_reg': "тЬЕ рджрд░реНрддрд╛ рдкрдЫрд┐, \"CHECK REGISTRATION\" рдмрдЯрдирдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН",
        'register_btn': "ЁЯУ▓ рджрд░реНрддрд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН",
        'check_btn': "ЁЯФН рджрд░реНрддрд╛ рдЬрд╛рдБрдЪ",
        'enter_player_id': "ЁЯФН *рдЖрдлреНрдиреЛ рджрд░реНрддрд╛ рдЬрд╛рдБрдЪ рдЧрд░реНрдиреБрд╣реЛрд╕реН*\n\nрд╕рддреНрдпрд╛рдкрд┐рдд рдЧрд░реНрди рдЖрдлреНрдиреЛ 1Win *Player ID* рдкреНрд░рд╡рд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН:\n\nЁЯУЭ *Player ID рдХрд╕рд░реА рдлреЗрд▓рд╛ рдкрд╛рд░реНрдиреЗ:*\n1. 1Win рдЦрд╛рддрд╛рдорд╛ рд▓рдЧ рдЗрди рдЧрд░реНрдиреБрд╣реЛрд╕реН\n2. рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕реЗрдЯрд┐рдЩрд╣рд░реВрдорд╛ рдЬрд╛рдиреБрд╣реЛрд╕реН\n3. Player ID рдирдореНрдмрд░ рдХрдкреА рдЧрд░реНрдиреБрд╣реЛрд╕реН\n4. рдпрд╣рд╛рдБ рдкреЗрд╕реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН\n\nЁЯФв *рдЕрдм рдЖрдлреНрдиреЛ Player ID рдкреНрд░рд╡рд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН:*",
        'loading_registration': "тП│ *рдХреГрдкрдпрд╛ рдХреЗрд╣реА рд╕реЗрдХреЗрдиреНрдб рдкрд░реНрдЦрдиреБрд╣реЛрд╕реН, рддрдкрд╛рдИрдВрдХреЛ рджрд░реНрддрд╛ рд▓реЛрдб рд╣реБрджреИрдЫ...*",
        'reg_success': "ЁЯОЙ *рдмрдзрд╛рдИ рдЫ, рддрдкрд╛рдИрдВрд▓реЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рджрд░реНрддрд╛ рдкреВрд░рд╛ рдЧрд░реНрдиреБрднрдпреЛ!*\n\nтЬЕ рддрдкрд╛рдИрдВрдХреЛ рдЦрд╛рддрд╛ рдмреЛрдЯрд╕рдБрдЧ рд╕рд┐рдЩреНрдХ рднрдпреЛ\n\nЁЯТ┤ *рд╕рд┐рдЧреНрдирд▓рд╣рд░реВрдХреЛ рдкрд╣реБрдБрдЪ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрди, рдЖрдлреНрдиреЛ рдЦрд╛рддрд╛рдорд╛ рдХрдореНрддрд┐рдорд╛ 600тВ╣ рд╡рд╛ $6 рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН*\n\nЁЯХ╣я╕П рдЖрдлреНрдиреЛ рдЦрд╛рддрд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд░рд┐рдЪрд╛рд░реНрдЬ рдЧрд░реЗрдкрдЫрд┐, CHECK DEPOSIT рдмрдЯрдирдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рдкрд╣реБрдБрдЪ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрд╣реЛрд╕реН",
        'reg_not_found': "тЭМ *рдорд╛рдл рдЧрд░реНрдиреБрд╣реЛрд╕реН, рддрдкрд╛рдИрдВ рджрд░реНрддрд╛ рдЧрд░рд┐рдПрдХреЛ рдЫреИрди!*\n\nрдХреГрдкрдпрд╛ рдкрд╣рд┐рд▓реЗ REGISTER рдмрдЯрдирдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рд╣рд╛рдореНрд░реЛ рдПрдлрд┐рд▓рд┐рдПрдЯ рд▓рд┐рдЩреНрдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реЗрд░ рдЖрдлреНрдиреЛ рджрд░реНрддрд╛ рдкреВрд░рд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред\n\nрд╕рдлрд▓ рджрд░реНрддрд╛ рдкрдЫрд┐, рдлрд░реНрдХрдиреБрд╣реЛрд╕реН рд░ рдЖрдлреНрдиреЛ Player ID рдкреНрд░рд╡рд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред",
        'deposit_btn': "ЁЯТ│ рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН",
        'check_deposit_btn': "ЁЯФН рдЬрдореНрдорд╛ рдЬрд╛рдБрдЪ",
        'deposit_success': "ЁЯОК *рдЬрдореНрдорд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рддреНрдпрд╛рдкрд┐рдд!*\n\nЁЯТ░ *рдЬрдореНрдорд╛ рд░рдХрдо:* ${amount}\nтЬЕ *рд╕реНрдерд┐рддрд┐:* рд╕рддреНрдпрд╛рдкрд┐рдд\n\nЁЯОп рдЕрдм рддрдкрд╛рдИрдВрд╕рдБрдЧ AI-powered predictions рдХреЛ рдкрд╣реБрдБрдЪ рдЫ!\n\nЁЯТ░ *рдорд╛рдиреНрдпрддрд╛:* 5 рджрд┐рди (рджреИрдирд┐рдХ 20 predictions)\n\nрдЖрдлреНрдиреЛ рдкрд╣рд┐рд▓реЛ prediction рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрди рддрд▓ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН:",
        'deposit_not_found': "ЁЯТ░ *рдЬрдореНрдорд╛ рдлреЗрд▓рд╛ рдкрд░реЗрди!*\n\nрддрдкрд╛рдИрдВрд▓реЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рджрд░реНрддрд╛ рдЧрд░реНрдиреБрднрдПрдХреЛ рдЫ рддрд░ рдЕрд╣рд┐рд▓реЗ рд╕рдореНрдо рдХреБрдиреИ рдЬрдореНрдорд╛ рдкрддреНрддрд╛ рд▓рд╛рдЧреЗрдХреЛ рдЫреИрдиред\n\nЁЯТ╡ prediction рдкрд╣реБрдБрдЪ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрди рдХрдореНрддрд┐рдорд╛ $6 рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред",
        'get_prediction_btn': "ЁЯОп prediction рдкреНрд░рд╛рдкреНрдд",
        'prediction_limit': "ЁЯЪл *prediction рд╕реАрдорд╛ reached*\n\nрддрдкрд╛рдИрдВрд▓реЗ рдЖрдЬрдХрд╛ 20 рдирд┐: рд╢реБрд▓реНрдХ predictions рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрднрдпреЛред\n\nЁЯТб *рд╡рд┐рдХрд▓реНрдкрд╣рд░реВ:*\nтАв рдирдпрд╛рдБ predictions рдХреЛ рд▓рд╛рдЧрд┐ рднреЛрд▓рд┐ рд╕рдореНрдо рдкрд░реНрдЦрдиреБрд╣реЛрд╕реН\nтАв рддрддреНрдХрд╛рд▓ рдкрд╣реБрдБрдЪрдХреЛ рд▓рд╛рдЧрд┐ 400тВ╣ рд╡рд╛ $4 рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН\n\nЁЯТ░ рдХрдореНрддрд┐рдорд╛ 400тВ╣ рд╡рд╛ $4 рдЬрдореНрдорд╛ рдЧрд░реЗрд░ predictions рдЬрд╛рд░реА рд░рд╛рдЦреНрдиреБрд╣реЛрд╕реН",
        'deposit_expired': "тП░ *рдЬрдореНрдорд╛ рдорд╛рдиреНрдпрддрд╛ рд╕рдорд╛рдкреНрдд!*\n\nрддрдкрд╛рдИрдВрдХреЛ 5-рджрд┐рдиреЗ prediction рдкрд╣реБрдБрдЪ рд╕рдорд╛рдкреНрдд рднрдПрдХреЛ рдЫред\n\nЁЯТО *рдЕрдм рдХреЗ рдЧрд░реНрдиреЗ:*\nтАв рдирдпрд╛рдБ рдЬрдореНрдорд╛ рдЧрд░реЗрд░ predictions рдЬрд╛рд░реА рд░рд╛рдЦреНрдиреБрд╣реЛрд╕реН\nтАв 5 рджрд┐рдирдХреЛ рд▓рд╛рдЧрд┐ рджреИрдирд┐рдХ 20 predictions рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрд╣реЛрд╕реН\n\nЁЯТ░ рдЕрдм рдЬрдореНрдорд╛ рдЧрд░реЗрд░ рддрдкрд╛рдИрдВрдХреЛ prediction рдкрд╣реБрдБрдЪ рдкреБрди: рд╕реБрд░реБ рдЧрд░реНрдиреБрд╣реЛрд╕реН!",
        'deposit_again_btn': "ЁЯТ│ рдлреЗрд░рд┐ рдЬрдореНрдорд╛",
        'try_tomorrow_btn': "ЁЯХР рднреЛрд▓рд┐ рдкреНрд░рдпрд╛рд╕",
        'next_prediction_btn': "ЁЯФД рдЕрд░реНрдХреЛ prediction",
        'prediction_text': "ЁЯОп *AI рдХреНрд░рд┐рдХреЗрдЯ prediction* ЁЯдЦ\n\nЁЯПЯя╕П *рдЦреЗрд▓:* {team_a} vs {team_b}\nЁЯУК *prediction:* {prediction}\nтЬЕ *рд╡рд┐рд╢реНрд╡рд╛рд╕:* {confidence}%\n\nЁЯУИ *рд╡рд┐рд╢реНрд▓реЗрд╖рдг:*\n{analysis}\n\nтЪая╕П *AI prediction - рдЬрд┐рдореНрдореЗрд╡рд╛рд░реА рд╕рдВрдЧ рдЬреБрдЖ рдЦреЗрд▓реНрдиреБрд╣реЛрд╕реН*"
    }
}

# ==================== INACTIVITY REMINDERS ====================
INACTIVITY_MESSAGES = {
    'en': [
        "ЁЯЪА *Why are you missing your chance?* \n\nЁЯТ░ Earn $50-$100 daily with AI predictions!\n\nЁЯСЙ /start - Get predictions now!",
        "ЁЯФе *Don't miss opportunities!* \n\nЁЯОп Live cricket predictions waiting!\n\nЁЯСЙ /start - Get winning predictions!",
        "ЁЯТО *Your winning streak awaits!* \n\nЁЯУК 85%+ accuracy predictions!\n\nЁЯСЙ /start - Start earning now!"
    ],
    'hi': [
        "ЁЯЪА *рдЖрдк рдореМрдХрд╛ рдХреНрдпреЛрдВ рдЧрдВрд╡рд╛ рд░рд╣реЗ рд╣реИрдВ?* \n\nЁЯТ░ AI predictions рд╕реЗ рд░реЛрдЬ $50-$100 рдХрдорд╛рдПрдВ!\n\nЁЯСЙ /start - Predictions рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ!",
        "ЁЯФе *рдЕрд╡рд╕рд░ рдордд рдЧрдВрд╡рд╛рдПрдВ!* \n\nЁЯОп рд▓рд╛рдЗрд╡ рдХреНрд░рд┐рдХреЗрдЯ predictions рддреИрдпрд╛рд░!\n\nЁЯСЙ /start - Winning predictions рдкрд╛рдПрдВ!"
    ],
    'bn': [
        "ЁЯЪА *ржЖржкржирж┐ ржЖржкржирж╛рж░ рж╕рзБржпрзЛржЧ ржХрзЗржи рж╣рж╛рж░рж╛ржЪрзНржЫрзЗржи?* \n\nЁЯТ░ AI predictions ржжрж┐ржпрж╝рзЗ ржжрзИржирж┐ржХ $50-$100 ржЖржпрж╝ ржХрж░рзБржи!\n\nЁЯСЙ /start - predictions ржкрж╛ржи!",
        "ЁЯФе *рж╕рзБржпрзЛржЧ рж╣рж╛рж░рж╛ржмрзЗржи ржирж╛!* \n\nЁЯОп рж▓рж╛ржЗржн ржХрзНрж░рж┐ржХрзЗржЯ predictions ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржЫрзЗ!\n\nЁЯСЙ /start - winning predictions ржкрж╛ржи!"
    ],
    'ur': [
        "ЁЯЪА *╪в┘╛ ┘Е┘И┘В╪╣ ┌й█М┘И┌║ ┌й┌╛┘И ╪▒█Б█Т █Б█М┌║╪Я* \n\nЁЯТ░ AI predictions ┌й█Т ╪│╪з╪к┌╛ ╪▒┘И╪▓╪з┘Ж█Б $50-$100 ┌й┘Е╪з╪ж█М┌║!\n\nЁЯСЙ /start - predictions ╪н╪з╪╡┘Д ┌й╪▒█М┌║!",
        "ЁЯФе *┘Е┘И┘В╪╣┘И┌║ ┌й┘И ┘Е╪к ┌п┘Ж┘И╪з╪ж█М┌║!* \n\nЁЯОп ┘Д╪з╪ж█М┘И ┌й╪▒┌й┘╣ predictions ┘Е┘Ж╪к╪╕╪▒!\n\nЁЯСЙ /start - winning predictions ╪н╪з╪╡┘Д ┌й╪▒█М┌║!"
    ],
    'ne': [
        "ЁЯЪА *рддрдкрд╛рдИрдВ рдЕрд╡рд╕рд░ рдХрд┐рди рд╣рд░рд╛рдЙрдБрджреИ рд╣реБрдиреБрд╣реБрдиреНрдЫ?* \n\nЁЯТ░ AI predictions рдХреЛ рд╕рд╛рде рджреИрдирд┐рдХ $50-$100 рдХрдорд╛рдЙрдиреБрд╣реЛрд╕реН!\n\nЁЯСЙ /start - predictions рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрд╣реЛрд╕реН!",
        "ЁЯФе *рдЕрд╡рд╕рд░ рд╣рд░рд╛рдЙрдиреБрд╣реЛрд╕реН!* \n\nЁЯОп рд▓рд╛рдЗрдн рдХреНрд░рд┐рдХреЗрдЯ predictions рдкрд░реНрдЦрд┐рд░рд╣реЗрдХреЛ рдЫ!\n\nЁЯСЙ /start - winning predictions рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрд╣реЛрд╕реН!"
    ]
}

def send_inactivity_reminders():
    try:
        current_time = datetime.now()
        for user_id, user_data in users_storage.items():
            if user_data.get('last_activity_date'):
                last_activity = datetime.strptime(user_data['last_activity_date'], '%Y-%m-%d')
                hours_inactive = (current_time - last_activity).total_seconds() / 3600
                
                if hours_inactive >= 24:
                    language = user_data.get('language', 'en')
                    messages = INACTIVITY_MESSAGES.get(language, INACTIVITY_MESSAGES['en'])
                    message = random.choice(messages)
                    send_telegram_message(user_id, message)
                    user_data['last_reminder_date'] = current_time.strftime('%Y-%m-%d')
                    save_user(user_data)
                    time.sleep(0.5)
    except Exception as e:
        print(f"Reminder error: {e}")

def start_reminder_scheduler():
    def run_scheduler():
        while True:
            send_inactivity_reminders()
            time.sleep(6 * 3600)
    thread = threading.Thread(target=run_scheduler, daemon=True)
    thread.start()

# ==================== USER MANAGEMENT ====================
def get_user(user_id):
    if user_id not in users_storage:
        users_storage[user_id] = {
            'user_id': user_id, 'language': 'en', 'prediction_count': 0, 'last_prediction_date': None,
            'last_activity_date': datetime.now().strftime('%Y-%m-%d'), 'player_id': None, 'deposit_amount': 0,
            'deposit_date': None, 'last_reminder_date': None
        }
    return users_storage[user_id]

def save_user(user_data):
    users_storage[user_data['user_id']] = user_data

def update_user_activity(user_id):
    user = get_user(user_id)
    user['last_activity_date'] = datetime.now().strftime('%Y-%m-%d')
    save_user(user)

def can_get_prediction(user_id):
    user = get_user(user_id)
    today = datetime.now().strftime('%Y-%m-%d')
    update_user_activity(user_id)
    
    if user.get('deposit_amount', 0) < 6:
        return False, "no_deposit"
    
    if user.get('deposit_date'):
        deposit_date = datetime.strptime(user['deposit_date'], '%Y-%m-%d')
        if (datetime.now() - deposit_date).days >= 5:
            return False, "deposit_expired"
    
    if user['last_prediction_date'] != today:
        user['prediction_count'] = 0
        user['last_prediction_date'] = today
        save_user(user)
    
    if user['prediction_count'] >= 20:
        return False, "daily_limit"
    
    return True, "allowed"

def update_prediction_count(user_id):
    user = get_user(user_id)
    user['prediction_count'] += 1
    user['last_prediction_date'] = datetime.now().strftime('%Y-%m-%d')
    user['last_activity_date'] = datetime.now().strftime('%Y-%m-%d')
    save_user(user)

def update_deposit_info(user_id, deposit_amount):
    user = get_user(user_id)
    user['deposit_amount'] = deposit_amount
    user['deposit_date'] = datetime.now().strftime('%Y-%m-%d')
    user['prediction_count'] = 0
    user['last_prediction_date'] = datetime.now().strftime('%Y-%m-%d')
    user['last_activity_date'] = datetime.now().strftime('%Y-%m-%d')
    save_user(user)

# ==================== REAL CRICAPI PREDICTIONS ====================
class CricketAIPredictor:
    def __init__(self):
        self.api_key = CRICAPI_KEY
        self.last_fetch_time = None
        self.cached_matches = []
        self.used_matches = set()
        
    def fetch_live_matches(self):
        try:
            current_time = datetime.now()
            if (self.last_fetch_time and (current_time - self.last_fetch_time).seconds < 600 and self.cached_matches):
                return self.cached_matches
                
            if not self.api_key:
                return self.get_fallback_matches()
                
            print("ЁЯМР Fetching live matches from CricAPI...")
            url = f"https://api.cricapi.com/v1/matches?apikey={self.api_key}&offset=0"
            response = requests.get(url, timeout=15)
            
            if response.status_code == 200:
                data = response.json()
                if data.get('status') == 'success':
                    matches = []
                    for match in data.get('data', []):
                        try:
                            match_started = match.get('matchStarted', False)
                            match_ended = match.get('matchEnded', False)
                            status = match.get('status', '').lower()
                            is_live = (match_started and not match_ended) or 'live' in status or 'running' in status
                            
                            if is_live:
                                team_info = match.get('teamInfo', [])
                                if len(team_info) >= 2:
                                    team_a = team_info[0].get('name', 'Team A').strip()
                                    team_b = team_info[1].get('name', 'Team B').strip()
                                    if team_a and team_b and team_a != 'Team A' and team_b != 'Team B':
                                        matches.append({
                                            'id': match.get('id', ''),
                                            'team_a': team_a, 'team_b': team_b,
                                            'series': match.get('series', 'International'),
                                            'status': match.get('status', 'Live')
                                        })
                        except: continue
                    
                    if matches:
                        self.cached_matches = matches
                        self.last_fetch_time = current_time
                        print(f"ЁЯОп Live matches found: {len(matches)}")
                        return matches
            return self.get_fallback_matches()
        except Exception as e:
            print(f"CricAPI Error: {e}")
            return self.get_fallback_matches()
    
    def get_fallback_matches(self):
        return [
            {'id': '1', 'team_a': 'India', 'team_b': 'Pakistan', 'series': 'Asia Cup', 'status': 'Live'},
            {'id': '2', 'team_a': 'Australia', 'team_b': 'England', 'series': 'World Cup', 'status': 'Live'},
            {'id': '3', 'team_a': 'South Africa', 'team_b': 'New Zealand', 'series': 'Championship', 'status': 'Live'}
        ]
    
    def analyze_team_performance(self, team1, team2):
        team_stats = {
            'india': {'rating': 118}, 'pakistan': {'rating': 112}, 'australia': {'rating': 116},
            'england': {'rating': 114}, 'south africa': {'rating': 106}, 'new zealand': {'rating': 108}
        }
        team1_rating = team_stats.get(team1.lower(), {'rating': 95})['rating']
        team2_rating = team_stats.get(team2.lower(), {'rating': 95})['rating']
        
        team1_strength = team1_rating * random.uniform(0.85, 1.25)
        team2_strength = team2_rating * random.uniform(0.85, 1.25)
        total_strength = team1_strength + team2_strength
        
        if team1_strength > team2_strength:
            winner = team1
            confidence = max(60, min(94, int((team1_strength / total_strength) * 100)))
        else:
            winner = team2
            confidence = max(60, min(94, int((team2_strength / total_strength) * 100)))
        
        return {
            'prediction': f"{winner} to win",
            'confidence': confidence,
            'analysis': f"ЁЯПЖ Team analysis completed\nЁЯУИ Form and conditions analyzed\nЁЯОп Key players performance checked",
            'team_a': team1, 'team_b': team2,
            'user_analysis': f"Based on comprehensive analysis, {winner} shows stronger chances with {confidence}% confidence."
        }
    
    def get_prediction(self):
        matches = self.fetch_live_matches()
        if not matches:
            fallback_match = random.choice(self.get_fallback_matches())
            return self.analyze_team_performance(fallback_match['team_a'], fallback_match['team_b'])
        
        available_matches = [m for m in matches if m['id'] not in self.used_matches]
        if not available_matches:
            self.used_matches.clear()
            available_matches = matches
        
        selected_match = random.choice(available_matches)
        self.used_matches.add(selected_match['id'])
        return self.analyze_team_performance(selected_match['team_a'], selected_match['team_b'])

ai_predictor = CricketAIPredictor()

# ==================== TELEGRAM FUNCTIONS ====================
def send_telegram_message(chat_id, text, reply_markup=None, parse_mode='Markdown'):
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        payload = {'chat_id': chat_id, 'text': text, 'parse_mode': parse_mode}
        if reply_markup: payload['reply_markup'] = reply_markup
        response = requests.post(url, json=payload, timeout=10)
        return response.json()
    except Exception as e:
        print(f"Send message error: {e}")
        return None

def edit_telegram_message(chat_id, message_id, text, reply_markup=None):
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/editMessageText"
        payload = {'chat_id': chat_id, 'message_id': message_id, 'text': text, 'parse_mode': 'Markdown'}
        if reply_markup: payload['reply_markup'] = reply_markup
        response = requests.post(url, json=payload, timeout=10)
        return response.json()
    except Exception as e:
        print(f"Edit message error: {e}")
        return None

# ==================== POSTBACK HANDLER ====================
@app.route('/1win-postback', methods=['GET', 'POST'])
def handle_1win_postback():
    try:
        if request.method == 'GET': data = request.args.to_dict()
        else: data = request.get_json() or request.form.to_dict()
        
        player_id = data.get('player_id') or data.get('id')
        status = data.get('status', '')
        deposit_amount = 0
        
        for param in ['amount', 'fdp', 'dep_sum']:
            if data.get(param):
                try: deposit_amount = float(data.get(param)); break
                except: continue
        
        if player_id:
            player_registrations[player_id] = True
            if deposit_amount > 0:
                player_deposits[player_id] = deposit_amount
                for user_data in users_storage.values():
                    if user_data.get('player_id') == player_id:
                        update_deposit_info(user_data['user_id'], deposit_amount)
            
            return jsonify({"status": "success", "player_id": player_id, "deposit": deposit_amount})
        
        return jsonify({"status": "error"})
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)})

# ==================== MAIN BOT HANDLER ====================
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.get_json()
        
        if 'message' in data:
            message = data['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            user_id = message['from']['id']
            
            update_user_activity(user_id)
            user = get_user(user_id)
            
            if text == '/start':
                keyboard = {
                    'inline_keyboard': [
                        [{'text': 'ЁЯЗ║ЁЯЗ╕ English', 'callback_data': 'lang_en'}],
                        [{'text': 'ЁЯЗоЁЯЗ│ рд╣рд┐рдВрджреА', 'callback_data': 'lang_hi'}],
                        [{'text': 'ЁЯЗзЁЯЗй ржмрж╛ржВрж▓рж╛', 'callback_data': 'lang_bn'}],
                        [{'text': 'ЁЯЗ╡ЁЯЗ░ ╪з╪▒╪п┘И', 'callback_data': 'lang_ur'}],
                        [{'text': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓реА', 'callback_data': 'lang_ne'}]
                    ]
                }
                msg_data = LANGUAGE_MESSAGES.get(user['language'], LANGUAGE_MESSAGES['en'])
                send_telegram_message(chat_id, msg_data['welcome'], keyboard)
            
            elif text.isdigit() and len(text) >= 5:
                player_id = text
                user = get_user(user_id)
                msg_data = LANGUAGE_MESSAGES.get(user['language'], LANGUAGE_MESSAGES['en'])
                
                loading_msg = send_telegram_message(chat_id, msg_data['loading_registration'])
                
                if player_id in player_registrations:
                    user['player_id'] = player_id
                    user['is_registered'] = True
                    user['deposit_amount'] = player_deposits.get(player_id, 0)
                    save_user(user)
                    
                    if user['deposit_amount'] >= 6:
                        keyboard = {'inline_keyboard': [[{'text': msg_data['get_prediction_btn'], 'callback_data': 'get_prediction'}]]}
                        message_text = msg_data['deposit_success'].replace('{amount}', str(user['deposit_amount']))
                    else:
                        keyboard = {
                            'inline_keyboard': [
                                [{'text': msg_data['deposit_btn'], 'url': 'https://mostbet-king.com/5rTs'}],
                                [{'text': msg_data['check_deposit_btn'], 'callback_data': 'check_deposit'}]
                            ]
                        }
                        message_text = msg_data['reg_success']
                    
                    if loading_msg and 'result' in loading_msg:
                        edit_telegram_message(chat_id, loading_msg['result']['message_id'], message_text, keyboard)
                    else:
                        send_telegram_message(chat_id, message_text, keyboard)
                else:
                    keyboard = {'inline_keyboard': [[{'text': msg_data['register_btn'], 'url': 'https://mostbet-king.com/5rTs'}]]}
                    if loading_msg and 'result' in loading_msg:
                        edit_telegram_message(chat_id, loading_msg['result']['message_id'], msg_data['reg_not_found'], keyboard)
                    else:
                        send_telegram_message(chat_id, msg_data['reg_not_found'], keyboard)
        
        elif 'callback_query' in data:
            callback = data['callback_query']
            chat_id = callback['message']['chat']['id']
            message_id = callback['message']['message_id']
            data_value = callback['data']
            user_id = callback['from']['id']
            
            update_user_activity(user_id)
            user = get_user(user_id)
            msg_data = LANGUAGE_MESSAGES.get(user['language'], LANGUAGE_MESSAGES['en'])
            
            if data_value.startswith('lang_'):
                lang_code = data_value.split('_')[1]
                user['language'] = lang_code
                save_user(user)
                msg_data = LANGUAGE_MESSAGES[lang_code]
                
                keyboard = {
                    'inline_keyboard': [
                        [{'text': msg_data['register_btn'], 'url': 'https://mostbet-king.com/5rTs'}],
                        [{'text': msg_data['check_btn'], 'callback_data': 'check_registration'}]
                    ]
                }
                
                message_text = f"{msg_data['selected']}\n\n{msg_data['register_title']}\n\n{msg_data['account_new']}\n\n{msg_data['instruction1']}\n\n{msg_data['instruction2']}\n\n{msg_data['after_reg']}"
                edit_telegram_message(chat_id, message_id, message_text, keyboard)
            
            elif data_value == 'check_registration':
                edit_telegram_message(chat_id, message_id, msg_data['enter_player_id'])
            
            elif data_value == 'check_deposit':
                deposit_amount = user.get('deposit_amount', 0)
                if deposit_amount >= 6:
                    keyboard = {'inline_keyboard': [[{'text': msg_data['get_prediction_btn'], 'callback_data': 'get_prediction'}]]}
                    message_text = msg_data['deposit_success'].replace('{amount}', str(deposit_amount))
                else:
                    keyboard = {
                        'inline_keyboard': [
                            [{'text': msg_data['deposit_btn'], 'url': 'https://mostbet-king.com/5rTs'}],
                            [{'text': msg_data['check_deposit_btn'], 'callback_data': 'check_deposit'}]
                        ]
                    }
                    message_text = msg_data['deposit_not_found']
                edit_telegram_message(chat_id, message_id, message_text, keyboard)
            
            elif data_value == 'get_prediction':
                can_predict, reason = can_get_prediction(user_id)
                
                if not can_predict:
                    if reason == "deposit_expired":
                        # 5 DAYS COMPLETED - ONLY DEPOSIT BUTTON
                        keyboard = {'inline_keyboard': [[{'text': msg_data['deposit_again_btn'], 'url': 'https://mostbet-king.com/5rTs'}]]}
                        edit_telegram_message(chat_id, message_id, msg_data['deposit_expired'], keyboard)
                    
                    elif reason == "daily_limit":
                        # DAILY LIMIT - BOTH BUTTONS
                        keyboard = {
                            'inline_keyboard': [
                                [{'text': msg_data['deposit_again_btn'], 'url': 'https://mostbet-king.com/5rTs'}],
                                [{'text': msg_data['try_tomorrow_btn'], 'callback_data': 'try_tomorrow'}]
                            ]
                        }
                        edit_telegram_message(chat_id, message_id, msg_data['prediction_limit'], keyboard)
                    
                    else:
                        # NO DEPOSIT
                        keyboard = {'inline_keyboard': [[{'text': msg_data['deposit_btn'], 'url': 'https://mostbet-king.com/5rTs'}]]}
                        edit_telegram_message(chat_id, message_id, msg_data['deposit_not_found'], keyboard)
                
                else:
                    # USER CAN GET PREDICTION
                    prediction = ai_predictor.get_prediction()
                    update_prediction_count(user_id)
                    
                    keyboard = {'inline_keyboard': [[{'text': msg_data['next_prediction_btn'], 'callback_data': 'get_prediction'}]]}
                    
                    message_text = msg_data['prediction_text'].format(
                        team_a=prediction['team_a'], team_b=prediction['team_b'],
                        prediction=prediction['prediction'], confidence=prediction['confidence'],
                        analysis=prediction['user_analysis']
                    )
                    
                    edit_telegram_message(chat_id, message_id, message_text, keyboard)
            
            elif data_value == 'try_tomorrow':
                edit_telegram_message(chat_id, message_id, "тП│ Please try again in 12 hours for new predictions.")
        
        return jsonify({"status": "success"})
    
    except Exception as e:
        print(f"Webhook error: {e}")
        return jsonify({"status": "error", "message": str(e)})

# ==================== BASIC ROUTES ====================
@app.route('/')
def home():
    return "тЬЕ Sports Prediction Bot - All Features Active!"

@app.route('/set_webhook', methods=['GET'])
def set_webhook():
    webhook_url = f"https://{VERCEL_URL}/webhook"
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook?url={webhook_url}"
    response = requests.get(url)
    return jsonify({"status": "success", "webhook_url": webhook_url})

@app.route('/test-register/<player_id>', methods=['GET'])
def test_register_player(player_id):
    player_registrations[player_id] = True
    player_deposits[player_id] = 6.0
    for user_data in users_storage.values():
        if user_data.get('player_id') == player_id:
            update_deposit_info(user_data['user_id'], 6.0)
    return jsonify({"status": "success", "player_id": player_id, "deposit": 6.0})

# ==================== START SCHEDULER ====================
start_reminder_scheduler()

if __name__ == '__main__':
    app.run(debug=True)
