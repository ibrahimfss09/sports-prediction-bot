import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# Setup logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Bot token from environment
BOT_TOKEN = os.environ.get('BOT_TOKEN')

logger.info(f"Bot token exists: {bool(BOT_TOKEN)}")

# Create bot application
try:
    application = Application.builder().token(BOT_TOKEN).build()
    logger.info("Bot application created successfully")
except Exception as e:
    logger.error(f"Failed to create bot application: {e}")
    application = None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    logger.info(f"Start command received from user: {user.id}")
    
    try:
        await update.message.reply_text(
            f"ЁЯЪА **Welcome {user.first_name}!**\n\n"
            "тЬЕ Bot is working!\n\n"
            "ЁЯМН Select your language:\n"
            "тАв ЁЯЗ║ЁЯЗ╕ English - Type /english\n"
            "тАв ЁЯЗоЁЯЗ│ Hindi - Type /hindi\n"
            "тАв ЁЯЗзЁЯЗй Bangla - Type /bangla\n"
            "тАв ЁЯЗ╡ЁЯЗ░ Urdu - Type /urdu\n" 
            "тАв ЁЯЗ│ЁЯЗ╡ Nepali - Type /nepali"
        )
    except Exception as e:
        logger.error(f"Error sending message: {e}")

async def english(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ЁЯМР *Step 1 - Register*\n\n"
        "тА╝я╕П THE ACCOUNT MUST BE NEW\n\n"
        "1я╕ПтГг If after clicking the \"REGISTER\" button you get to the old account, "
        "you need to log out of it and click the button again.\n\n"
        "2я╕ПтГг Specify a promocode during registration: **FREE**\n\n"
        "тЬЕ After REGISTRATION, click the \"CHECK REGISTRATION\" button\n\n"
        "[ЁЯУ▓ Register Now](https://1w.com/registration?affiliate=FREE)",
        parse_mode='Markdown'
    )

async def hindi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ЁЯМР *рдЪрд░рдг 1 - рдкрдВрдЬреАрдХрд░рдг*\n\n"
        "тА╝я╕П рдЦрд╛рддрд╛ рдирдпрд╛ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП\n\n"
        "1я╕ПтГг рдпрджрд┐ \"REGISTER\" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж рдЖрдк рдкреБрд░рд╛рдиреЗ рдЦрд╛рддреЗ рдореЗрдВ рдЖрддреЗ рд╣реИрдВ, "
        "рддреЛ рдЖрдкрдХреЛ рдЙрд╕рд╕реЗ рд▓реЙрдЧ рдЖрдЙрдЯ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ рдФрд░ рдлрд┐рд░ рд╕реЗ рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ред\n\n"
        "2я╕ПтГг рдкрдВрдЬреАрдХрд░рдг рдХреЗ рджреМрд░рд╛рди рдкреНрд░реЛрдореЛрдХреЛрдб рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдХрд░реЗрдВ: **FREE**\n\n"
        "тЬЕ рдкрдВрдЬреАрдХрд░рдг рдХреЗ рдмрд╛рдж, \"CHECK REGISTRATION\" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ\n\n"
        "[ЁЯУ▓ рдЕрднреА рдкрдВрдЬреАрдХрд░рдг рдХрд░реЗрдВ](https://1w.com/registration?affiliate=FREE)",
        parse_mode='Markdown'
    )

# Add other language commands similarly...

# Register handlers
if application:
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("english", english))
    application.add_handler(CommandHandler("hindi", hindi))
    # Add other commands...
    logger.info("Handlers registered successfully")
else:
    logger.error("Application not initialized - cannot register handlers")
